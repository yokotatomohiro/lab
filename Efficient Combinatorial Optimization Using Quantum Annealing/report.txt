量子アニーリングを用いた効率的な組み合わせ最適化

absoract
量子コンピュータが市販され, ヒュリスティックにNP困難問題に取り組めるようになったが, 現在の量子コンピュータが古典的コンピュータよりも量子的優位性があるものを提供しているかは分からない.
この論文ではNP困難問題である, クリーク検出と, グラフ分割に対するD-Wave2X量子アニーラの性能を評価する.
そのために量子アニーラに適したQUBOおよびイジングハミルトニアンとして定式化して, テストセットに対して量子ソルバ(Sapi,QBSolv,QSage)と古典的アルゴリズム(METES,SA,3rd)との性能を比較する.

実験の結果, グラフサイズが小さい場合, 得られた最良の解の質は同程度であったが, 古典的な方法は計算時間の点で量子アニーラよりも優れていた.
また, D-Waveに埋め込むことができる問題サイズに制限かあるので, 量子アニーラで解ける問題のほとんどでこれが当てはまる.
しかし, D-Waveの構造に合うように特別に設計された問題に対しては, 古典的な方法よりも計算時間が大幅に速くなる.

/-----------------------------------
1. Introduction
/-----------------------------------

最大クリーク問題とは, 与えられたグラフに対するフルコネクトのようなサブセットを見つけることを問題としている.
グラフ分割は, グラフをあらかじめ指定された数の成分に分割するために, 切る辺の数を最小にする.
このグラフ分割ではもう一つの変形であるCH分割を利用する.

量子アニーラは古典的なシミュレーテッドアニーリングのアルゴリズムをハードウェアとして実現したものであるが, 低エネルギー配置を探すために量子ゆらぎを利用している.

問題をハミルトニアンの形式にし, 最小化するために量子コンピュータを利用する利点は, 問題を物理システムに写像することで, システムがどのようにエネルギー最小値に自信を配置したかを観察することで解を読み取ることができることである.
特に, 計算時間は問題の大きさと無関係である.

記事の構成について
二章では, QUBOとイジングハミルトニアンの紹介をし, D-Waveの構造について説明する. 
また, 実験で利用する量子ツール(Sepi,QBSolv,QSage)や古典的アルゴリズム(SA,METHIS,Gurobi)について説明する.

三章では, 最大クリーク問題について調べる.
問題をQUBOで定式化し, 最大クリーク問題を解くために使用するパラメータについて説明する.
また, 小さいグラフと, 量子ビット構造に適合するように特別に選択されたグラフとの比較実験を示す.

四章では, エッジ分割とCH分割の二種類のグラフ分割に焦点を当てる.
QUBOとイジングの両方でハミルトニアンを導出し, ハミルトニアンの重みに関する条件を説明する.
ランダムグラフを使用して, エッジ分割とCH分割の両方について, 計算時間と求められた分割の質の観点から, 古典的ソルバと量子ソルバを評価する.
D-Waveデバイスの埋め込みにかかる時間とアニール時間を比較する.

五章では, 実験結果についての議論をする.
そこでは, D-Waveチップに合わせた問題に対しては量子的優位性が観測できたが, 一般的な問題に対しては観測できないと主張している.

/-----------------------------------
2. Method
/-----------------------------------
この章ではD-Waveデバイスが解ける問題である二次整数計画法について説明する.

2.1 Ising and QUBO formulations
(式)
二次整数計画法はn個の変数q_{i}を操作することで
QUBOの定式化では変数は{0,1}の二値を取り, イジングの定式化では{-1,+1}を取る.

慣例として, QUBOの問題では重みは下側対角行列として記述されており, 対角成分が一次の重みと対応し, 非対角成分は二次の重みに対応している.
イジング問題では一次の重みをベクトルhとして与え, 二次の重みを下対角行列で表す.

2.2 Conversion of Ising to QUBO and vice versa
QUBOとイジングは等価であり, 二つの違いは変数の取りうる値だけである.
以下のようにして変換をすることが可能である.

2.3 Qubit architecture and chains of qubits
D-Waveの量子コンピュータの量子ビットは12セルの格子状に相互接続された4×4の二部グラフセルからなるチップ上のキメラグラフ構造で配置されている.


2.4 D-Wave solver
D-Wave Inc.はいくつかの量子ソルバを提供しており, 量子ソルバは問題を量子コンピュータに提出し, 返された解に対して必要な後処理を適用して出力する.

2.4.1 Sepi 
C++およびPython用のインターフェースであり, これはD-Waveサーバへのインターネット接続の確立, 二次計画法の提出, および, 解の後処理を行える.
重要なことに, SepiインターフェースはユーザがD-Waveパラメータをユーザ自身が調節できる.
調節できるものに, 量子デバイスが実行することになっている繰り返し回数の選択, 後処理のタイプ指定, キメラ物理グラフ構造への埋め込み計算がある.
ユーザは埋め込みグラフを完全に制御できるので, キメラ構造に完全に適合するように設計された二次計画を提供することができる.
任意のグラフのサイズは48頂点に制限される.

2.4.2 QBSolve


2.4.3 QSage
C++およびPythonコードの中でD-Waveサーバへの接続ができるプログラミングインタフェースである.
SepiやQBSolvとは異なり, QUBOやイジングの定式化を必要としないブラックボッックスソルバである.

代わりに, QSageは　目的ブラックボックスからランダムな点をサンプリングし, それにより得られる関数値を利用して二次計画を補間して, その二次計画をD-Waveに送信する.
D-Waveから返された最小にを初期値としてタブーサーチを行う.

2.5 Classical solvers
古典的なソルバについての説明

2.5.1 simulated annealing with random staritng point
シミュレーテッドアルゴリズムについての説明

温度関数としてT(t)=log(1+t)を使用する.

2.5.2 METIS and Simulated annealing
METISは次の三段階のアプローチに基づいてグラフ分割を行うヒューリスティックなアルゴリズムである.

手順１
  力グラフを, 元のグラフG=G_{0}から始まり, 適切に小さいグラフG_{n}(典型的には100頂点未満)で終わる一連のグラフG_{0},...,G_{n}を    生成することで荒くしていく. 
  このシーケンスはi<Jの場合には常にG_{i}がG_{j}よりも少ないノードを含むという特性を持つ. 
  
手順２
  G_{n}はスペクトル二等分法またはk方向分割など, 他の選択したアルゴリズムを使用して分割される. 
  
手順３
  分割はG_{n-1},...,G_{1}を介してG_{0},...,G_{n}に逆投影される. 
  粗密化段階のより細かいグラフのそれぞれはマルチノードグラフよりも多くの自由度を含むので, 各投影後の分割を向上させるために, Fiduccia-Mattheysesのような改良アルゴリズムが使用される. 
  
METISを使用することで, サブグラフのサイズ, 区分化アルゴリズムなどを変更できる.
METISはグラフ分割で採用し, CH分割では, METISで与えられる初期解をりようしてSAで解く.

2.5.3 Gurobi
数学的プログラミングソルバである.
Gurobiは特定のQUBO問題を解くために使用した.

/-----------------------------------
3. The maximum clique problem
/-----------------------------------

最大クリーク問題は多くの分野で利用されている有名なNP困難問題である.


/-----------------------------------
4. Method
/-----------------------------------



/-----------------------------------
5. Method
/-----------------------------------




