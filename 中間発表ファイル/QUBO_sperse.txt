スパース推定のためのQUBO形式の導出

近年では, 新しいハードウェアの開発と提供が行われており, カナダのD-Wave.incが提供するイジング型アニーリングマシンの D-Wave 2000や古典的な論理回路を基に物理的にヒントを得たアニーリングアクセラレータを用いた富士通のDigital Annealerがある.
アニーリングマシンは最適化問題の近似解を得るために用いられ, 最適化問題はデータマイニングや機械学習などを含む様々な分野で重要な役割を果たしている.
特に, 量子アニーリング法は門脇と西森によって提案され, 似たような考え方に断熱量子計算がある. これは近年では, 実用的なアプリケーションの検証に用いられている.
機械学習と量子ボルツマンマシンについての議論はBiamonteの論文でされており, ハードウェア, ソフトウェアの観点から多くの挑戦的な問題が存在している.
制限の１つにシステムサイズが小さいことが挙げられるが, 年々, 利用可能な量子ビッット(もしくは古典ビット)が増加しており, これにより実用的でサイズか大きな最適化問題に取り組むことが可能になった.

上記のアニーリングハードウェアにはQUBO形式が必要である.
ハードウェアはイジングタイプのハミルトニアンを基にしており, したがって, 元の最適化問題のコスト関数をQUBO形式に変換する必要がある.
(QUBO形式はイジングモデルと等価である.)
連続変数は二進数展開を行うことで十分にイジングタイプの変数に変換することができるが, 一般的には元のコスト関数を直接QUBO形式に再定式化することができない.
いくつかの再定式化はLucasの先行研究によって与えられており, QUBO形式へ表現する論理ゲートを示している.
しかしながら, 定量的なQUBO形式の導出方法はまだ見つかっていない.
近年では, ルジャンドル変換を用いたq-loss関数のQUBO形式の導出がされている.
:q-loss関数は機械学習のラベルノイズに対してロバスト性をもつコスト関数を提供する.
ルジャンドル変換を用いたq-loss関数のQUBO形式への変換はいくつかの数学的なQUBO形式への変換に関係している.
実際には, ReLUタイプ関数に対してはルジャンドル変換では不十分であることが明らかになった.
:Wolfeの双対定理はReLUタイプ関数をQUBO形式に変換するために用いられる.
これらの結果はQUBO形式を直接的に導出できず, ときには元のコスト関数に依存したさらなる慎重な検討を行う必要がある.

上記に示したように, 機械学習問題のためにQUBO形式を導出する研究がある.
もちろん, 最適化問題に関連のある研究分野は他にも多くあり, その１つにデータ分析(データマイニング)がある.
データ分析において”正規化”の概念は重要な役割を持ち, もちろん機械学習でも用いられる.
例えばL_2ノルムは幅広く利用されており:L_2正規化を用いた線形回帰はRidge回帰と呼ばれており, 様々な実用的な問題に対して幅広く利用されている.
加えて, L_1ノルムは正規化の使い勝手の良い例であり, 解に"スパース性"の一種を加えるために適用される.
;スパース推定はデータ分析の研究分野で注目されているトピックの１つである.
LASSOはスパース推定を達成するのに実用的で有名な方法であり, コスト関数にL_1ノルムを加えるだけでよい.
近年では, スパース推定の考え方はブラックホールの分析に利用されている.
ブラックホールに関するデータはとても小さく, そのせいで画像の解像度が低く, 観測することが難しい.
したがって, 世界中の電波望遠鏡からの同時測定が実行され, スパース推定に基づく方法が観測されたビッグデータに適用され, それによって重要な情報のみが抽出される.:そしてブラックホールの画像が得られた.
L_2ノルムは二次形式なのでQUBO形式に簡単に結合することができるが, 一方でL_1ノルムは微分不可能なのでQUBO形式はまだ導出されていない.

本項ではL_1ノルムのQUBO形式の導出を行う.
QUBO形式を得るためにルジャンドル変換とWolfeの双対定理を用いる.
さらに, 前の導出手法を単純に適用するだけでは不十分であることが明らかになった.
;数値実験の結果と導出の見直しからQUBO形式の単純な導出ができた.
単純なQUBO形式の導出は通常の導出よりも変数の数が小さくなる.
このような変数の数の削減は, イジング型ハードウェアの量子ビット(古典ビット)数の数が制限されている現在においてとても重要なことである.

この論文の構成は次のようになる.
二章ではQUBO形式についての説明と先行研究について.
導出についての重要な技術は後で用いるので説明する.
三章では, QUBO形式でのL_1ノルムの導出と数値実験の結果を与える.
四章では, この論文の結果を与える.
;三章で導出した自然なQUBO形式の導出から変数を減らした単純なQUBO形式を与える.
五章では, まとめと展望を与える

2. 背景と先行研究
この章では, いくつかの背景知識と, 先行研究について大まかに説明する.
2.1 QUBOとイジングモデル
イントロダクションで説明したように組み合わせ最適化問題を解くためにイジング型のアニーリングマシンはイジングハミルトニアンかQUBO形式が必要である.
QUBO形式はバイナリ変数を持ち, これは１か０の値をとる. そしてバイナリ変数はときに組み合わせ最適化の考えと一致する.
;連続変数のバイナリ展開は, 自然にバイナリ式を導入する.
もちろん, QUBO形式とイジングモデルは等価なので, QUBO形式をイジングモデルに変換することができ, 逆も同様である.
イジングモデルは次のように表現される.
(式1)
ここでσ_i\in{-1,+1}はi番目のスピン変数であり, J_ijはi番目とj番目のスピン間の二次項の係数である.
また, q_i\in{0,1}のバイナリ変数をi番目のスピンに当てはめるとq_iはσ_iを用いてq_i=(σ_i +1)/2と変換でき, (式1)は次のように変換される.
(式2)
ここで, QUBO形式とイジングハミルトニアンの関係は[6]を参照してください.
[6]では典型的な最適化問題に対するQUBO形式ののいくつかの例を与えている.

2.2 ルジャンドル変換
読み手の利便性のために, ルジャンドル変換についての説明を行う.
もしf_Lが凸関数の場合, f_Lのルジャンドル変換はf_Lの共役関数と呼ばれ, 次のように表される.
(式3)
これは変数tを新たに導入して, 変数xの関数をtに対する関数に変換した. 
加えて(式3)は次の式と等しい
(式4)

2.3 先行研究1: q-loss関数
ここでは, Denchevらが行った先行研究について説明する.
[11]で提案されたq-loss関数は次のように表される.
(式5)
ここでqはパラメータでありmは連続変数である.
[11]では, 機械学習でのq-loss関数の適用に対して議論を行い, q-lossがラベルノイズに対してロバスト性があることが明らかになった.
(式5)はmax関数なので, 一見q-loss関数のQUBO形式は簡単ではないように見える.
Denchevらは, ルジャンドル変換を適用し, 最終的には次の関数を導出した.
(式6)
ここでtは追加の変数であり, ルジャンドル変換の過程で導入した.
(式6)での変数mとtは連続だが, 二進数展開を行うことでq-loss関数をQUBO形式に変換できる.
二進数展開の詳細については[11]を参照してください.
(式6)でのsign関数については二進数展開を行うことで一体で表現できる.

2.4 Wolfeの双対
非線形のプログラミングや数学的な最適化において, Wolfeの双対定理は不等式制約を持つ主問題を双対問題に変換するために用いられる.
変換を適応する目的関数と制約について, 主問題は次のようになる.
(式7)
ここでf_wはある最適化する凸関数であり, {h_i}は凸な不等式制約である.
ラグランジアン関数に対するこの最適化問題は(式8)のようになる
(式8)
ここでzはラグランジュ係数のベクトルである.
また, (式7)での最小化問題は次の最大化問題と等しいことをWolfeの双対定理で意味している.
(式9)
上に示したよに, Wolfeの双対定理は最小化問題を最大化問題に変換する.

2.5 先行研究2: ReLUタイプ関数
[12]では次のReLUタイプ関数のQUBO形式について議論する.
(式10)
関数f_ReLUはReLU関数の変数をmから-mに変換した単純なものである.
[12]で示されるように, ルジャンドル変換の単純なてきようでは(式10)は次のように表現される
(式11)
ここでtはルジャンドル変換を適用したことによる新たな変数である.

(11)では二進数展開を行うことでQUBO形式を得られるが, 最適化問題には適さない.
これはmin関数の前にマイナス符号が付いているためである.
:ReLUタイプ関数を最適化問題のコスト関数C(m)の制約もしくはペナルティ項の一種として使うとき, 最適化問題全体は次のように与えられる.
(式12)
そして, したがって,コスト関数C(m)とReLUタイプ関数f(m)は同時に最適化できない.
したがって, Wolfeの双対定理は[12]で導入されており, 最後には次の式が導出される.
(式13)
ここでMは大きな正の定数である.
式(13)はコスト関数C(m)と組み合わせて利用することが容易であることがわかる.

3. L_1ノルムのQUBO形式の自然な導出
このようでは, ルジャンドル変換とWolfeの双対定理を自然にL_1ノルムに適用した.

3.1 QUBO定式
L_1ノルムは普通変数mの絶対値関数を意味しているが, ここでは次の関数f(m)を導入する.
(式14)
またf(m)は次のように表現できる.
(式15)
ここでf(m)は式(10)のReLUタイプ関数である.
したがって, 2.5節での議論を用いてQUBO形式のf(m)を容易に得ることができる.
しかしながら, QUBO形式には６つの変数が追加で必要になる.
以下の導出式ではf(m)のQUBO形式はたった３つ変数を追加するだけで得られる.

したがって, 式(14)の関数f(m)にルジャンドル変換を適用する.
ルジャンドル変換を適用するために, 式(14)の形式を次のように変形した.
(式)
ここで, 式(4)で利用したルジャンドル変換は各定義域に対して次のようになる.
(a)m<0
	定義域内の勾配は常に-1である.
	したがって共役関数は次のようになり, tのとりうる値はt=-1である.
(b)m=0
	左微分はf(m)=-1であり, 右微分はf(m)=1なので, 勾配のとりうる値は-1から1である.
	したがって, 共役関数はf(t)=0であり定義域はt\in[-1,1]である.
(c)m>0
	定義域内の勾配は常に1である.
	したがって共役関数は次のようになり, tのとりうる値はt=1のみである.

上記の議論より, f(m)の共役関数f*はf*(t)=0となる.
ここで共役関数f*(m)に対してもう一度ルジャンドル変換を適用すると, f(m)は凸関数なので, f(m)が再現される.
したがって, f(m)の二次形式は次のようになる.
(式16)
f(m)が二次形式であることを強調するためにf(m)の代わりにあらたにF(m)を導入する.

2.5節で示したように, ルジャンドル変換を通すことで二次形式を得られるが, 他のコスト関数を組み合わせることができない.
したがって, Wolfeの双対定理を利用した.
:以下の表現はF(m)にWolfeの双対定理を適用することで即座に得られる.
(式17)
この再定式化には等式制約があり, -m-z_1+z_2=0
;この制約をQUBO形式に埋め込むためには, ペナルティとして二乗項を加えるだけで十分である.
したがって, 最適化問題(17)は次のように表される.
(式18)
ここでMは定数であり, 等式制約を満たすために大きな値をとる.
満たさなければならない不等式制約があることに注意してください.
;これらの不等式制約は変数t,z_1,z_2それぞれの定義域に一致するように二進数展開をすることで簡単に実現できる.

結果として, L_1ノルムのQUBO形式は３つの追加の変数を利用することで表現できる.

3.2 数値実験
ここで(19)で得られたQUBO形式の検証をするために数値実験を行う.
量子アニーリングもしくはシミュレーテッドアニーリングを用いたQUBO形式を行うことが望ましく, ここではシミュレーテッドアルゴリズムを採用した.
ここでの目的は得られたQUBO形式の兼用であり, 式(19)の関数を二進数展開はせずに連続変数で実験を行った.

ここでの目的は式(19)がL_1ノルムである式(14)を与えるかを検証することである.
Mをランダムに生成し, 連続変数を用いたシミュレーテッドアニーリングを用いたF(m)の値を求めた.
Mは[-10,10]の一様乱数から生成した.
シミュレーテッドアニーリングではそれぞれのmでの振る舞いを見た.
各数値実験では, 追加の変数t,z_1,z_2の初期値は次の条件で行った.
・tは[-1,1]の一様乱数から生成する.
・z_1,z_2は[0,10]の一様乱数から生成する.

連続変数に対するシミュレーテッドアニーリングについてはメトロポリスヘイスティング法を使用した.
次の状態を生成するために各変数は各イテレーションで同一の確率で+0.001または-0.001だけ移動するようにした.
各イテレーションでは, 温度はT_n+1=0.9999T_nのアニーリングスケジュールで下げた.
初期温度はT_1=1000とし, 温度が10^-30以下になるまでアニーリングを行った.

図2はアニーリングでの結果を示した.
式(19)の最適化を行うことで十分にl-1ノルムが再現されることが確認できた.
コスト関数のF(m)の値だけではなく, ３つの追加の変数の値も図2に示した.
;z_1とz_2は特定の値に収束したが, tはランダムな値をとった.
この結果からtは最適化に対して不必要であり, つまりl-1ノルムのQUBO形式のさらなる単純化が与えられるかもしれない.

4 QUBO形式の削減
4.1 ルジャンドル変換での変数の削減
上で議論したように, ルジャンドル変換とWolfeの双対定理の単純な適用ではQUBO形式では３つの変数を追加する.
しかしながら, 前の章での数値実験から, ルジャンドル変換によって新たに追加される変数tは最適化問題には必要ないことが明らかになった.
スピン変数の数の制限より, 変数の数を小さくすることは好ましい.
したがって, ここでは式(19)でのQUBO形式から変数を削減する.

式(19)からtを削減するために, 等式制約に注目する.
等式制約を用いると次のようになる.
(式20)
したがってl-1ノルムの単純化されたQUBO形式は次のようなる.
(式21)
ここでF(m)は式(19)とは異なることを明らかにするために新たに導入した.
したがって, この(19)から(21)への変換はペナルティ項のおかげで実現でき, 等式制約を満たすように強制している.

4.2 数値実験
(21)式の単純化したQUBO形式の検証を行うために, もう一度数値実験を行った.
変数tの存在を除いて, 前の章と同じ条件でアニーリングを行った.
数値実験の結果を図3に示す.
;単純化したQUBO形式はよく動いたことが明らかになった.

5. まとめ
この論文より, l-1ノルムのQUBO形式を導出できた.
ルジャンドル変換とWolfeの双対定理を用いて, QUBO形式を導出できた.
さらに,  導出の過程で導入した変数を削減できることが明らかになった.
最後に, 数値的に単純化されたQUBO形式の検証がうまくいった.
一見して, l-1ノルムと最後の式(21)の表現は一致しているようには見えないが, この重要な結果は, 現在の研究の主な貢献である.

QUBO形式の導出からいくつかのまとめがある.
一章で議論したように, QUBO形式を機械的に導出する方法はない.
ルジャンドル変換とWolfeの双対定理がいくつかの場合に対して導出を与える一方で, 現在のスピン変数の制限より, 追加した変数の削減はイジング型のハードウェアに対して重要である.
導出で示したように, ルジャンドル変換で導入した変数tは, 最終的には削除できた.
ルジャンドル変換の利用が必要かどうかはまだ明らかではない.
;現段階では, (ルジャンドル変換->Wolfeの双対定理->変数の削減)の流れが直線的でわかりやすい.
もちろん, より適切な導出方法があるかもしれない.
加えて, イジング型のハードウェアでスパース推定を行うためにl-1ノルムと他のコスト関数と組み合わせる場合, 各推定したい値に対して２つの変数を追加する必要がある.
これは, 以前として追加する変数の数が多いことを意味している.
これはサイズの大きい実用的な問題に対してさらなる変数の削減をする重要な意味を持つ.



































