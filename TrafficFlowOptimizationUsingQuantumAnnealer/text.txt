Traffic Flow Optimization Using a Quantum Annealer

量子アニーリングアルゴリズムは, メタ最適化ツールのクラスに属し, バイナリ最適化問題の解決に適用できる.
D-Wave Systemsが製造する量子処理ユニット(QPU)などの量子アニーリングのハードウェア実装は, 最適化およびサンプリングタスクに対する技術の有用性を特徴付ける目的で, 研究の分析の対象となった.
この論文では, 量子テクノロジーを使用した実世界のアプリケーションを紹介する.
具体的には, 実世界の交通流の最適化問題の特定の部分を量子アニーリングに適するようにマッピングする方法を示す.
密集した道路ネットワーク内の自動車の位置データの継続的な再配布など, タイムクリティカルな最適化タスクが量子コンピューティングに適していることを示している.
現在の世代のD-Wave QPUのサイズと接続性は限れれているため, トラフィックフローの問題を解くために, ハイブリッド量子および古典的アプローチを使用している.

1. Introduction 
D-Wave Systems製の量子処理装置(QPU)などの量子アニーリング技術は, 複雑な組み合わせ最適化問題をとくように設計されている.
以前の実験では, これらのQPUが量子アニーリングを実装する方法と, アニーリングプロセス中にQPU内の量子ビットがコヒーレントで絡み合ったままであることを示した.
また, サンプリングと最適化の両方のタスクにおいて, 量子ビットの量子特性が会の計算でどのような役割を果たすかが示されている.
QPUは, 各量子ビットが変数を表し, 量子ビット間のカプラが量子ビットペアに関連するコストを表す, 二次非制約バイナリ最適化(QUBO)問題を解くように設計されている.
QPUは, 頂点として量子ビットと, それらの間の辺としてカプラを持つ無向グラフの物理的な実装である.
QPUが最小化するように設計さているQUBOの機能形式は次のとおりである.
(式1) Obj(x,Q)=x^T・Q・x
ここで, xはサイズNのバイナリ変数のベクトル, Qは変数間の関係を記述するN×Nの実数値行列である.
行列Qが与えられると, 式(1)の目的関数を最小化するためのバイナリ変数割り当てを見つけることは, 既知のNP困難問題であるイジングモデルを最小化することと同等である.

この論文では, トラフィックフローの最適化問題を紹介する.
車のGPS座標のT-Drive軌跡データセットから始め, リアルタイムで交通流を最適化することを目的とするシステムを模倣するワークフローを開発する.
D-Waveシステム(それらを使用するマシンツールととフトウェアツールの両方を含む)で最適化するために, 問題の主要な要素をQUBO形式に変換する方法を示す.
D-Waveシステムをオプティマイザーとして扱い, 実際のアプリケーションに似たワークフローにD-Wave QPU呼び出しを統合できることを示している.
ここで紹介する方法は, この実世界の問題を量子コンピュータにマッピングするための新しいアプローチである.

2. Formulation of the Traffic Flow Problem
交通流最適化問題の目的は, 特定の車がここの出発地と目的地の間を移動する時間を最小限にすることである.
道路を横断する時間は, 現在道路を占有している車の数の関数に比例するという単純な仮定を使用した.
したがって, 全ての道路セグメントの混雑を再商店に抑えることで, 全ての車の合計時間を再商店に抑える.
個々のセグメントの輻輳は, 特定の時間感覚でセグメントを通過する車の数の二次関数によって決定される.
再現性を確保するために, 一週間に記録された10,357台のタクシーの軌道を含む公的に利用可能なT-Drive軌道データセットを使用した.
データセットは, 1500万のデータポイントを特徴とし, 軌跡の合計距離は, 900万キロメートルを占める.
全ての車に1〜5秒の間隔でGPS座標を送信する必要があった.
データセット内の全ての車がこの速度で転送データを提供するわけではないため, GPSポイント間を補間することでデータセットを強化した.
以下に概説するステップバイステップのワークフローに問題を分割した.
「古典的」とは古典的な機械での計算を指し, 「量子」とはD-Waveシステムでの計算を指す.

1. 古典：マップおよびGPSデータの前処理
2. 古典：交通渋滞が発生しているエリアを特定する
3. 古典：可能であれば, データセット内の各自動車の空間的および時間的に有効な代替ルートを決定する
4. 古典：最小化問題をQUBOとして定式化する(重複するルート乗の道路セグメントの混雑を最小限に抑えるため)
5. バイブリッド量子/古典：トラフィックグラフ全体のルート割り当て間の輻輳を軽減する解を見つける
6. 古典：結果に基づいて車を再配布する
7. 渋滞が特定されたくなるまで手順2〜6を繰り返す

入力グラフの可視化を図1に示す.
この視覚化は, OpenStreetMapに基づくOSMnx APIを使用して生成され, OpenStreetMapからストリートネットワークを取得, 構築, 分析, 視覚化することができる.

2.1 Determination of Alternate Routes
問題の定式化を説明するために, T-Driveデータセットのサブセットに焦点を当てる.
データセット内の10,357台の車のうち, 市内中心部と北京空港を往復する車を418台選択する.
この特定のシナリオでは, 目標は交差する道路セグメントの数が最小になるように, 418台の車のサブセットを代替ルートにリダイレクトすることにより, 交通量を最大化することにした.


